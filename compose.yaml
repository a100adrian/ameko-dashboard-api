services:
  php:
    image: ${CONTAINER_PREFIX:-}-app-php
    restart: unless-stopped
    environment:
      # TODO cleanup all these. See what is needed and moved to .env, what not should be deleted.
      SERVER_NAME: ${SERVER_NAME:-localhost}
      XDEBUG_MODE: ${XDEBUG_MODE:-off}
      TRUSTED_PROXIES: ${TRUSTED_PROXIES:-127.0.0.0/8,10.0.0.0/8,172.16.0.0/12,192.168.0.0/16}
      TRUSTED_HOSTS: ^${SERVER_NAME:-example\.com|localhost}|php$$
      STABILITY: ${STABILITY:-stable}
      AUTO_HTTPS: "off"
      #      MERCURE_PUBLISHER_JWT_KEY: ${CADDY_MERCURE_JWT_SECRET:-!ChangeThisMercureHubJWTSecretKey!}
      #      MERCURE_SUBSCRIBER_JWT_KEY: ${CADDY_MERCURE_JWT_SECRET:-!ChangeThisMercureHubJWTSecretKey!}
      # Run "composer require symfony/orm-pack" to install and configure Doctrine ORM
      # DATABASE_URL: postgresql://${POSTGRES_USER:-app}:${POSTGRES_PASSWORD:-!ChangeMe!}@database:5432/${POSTGRES_DB:-app}?serverVersion=${POSTGRES_VERSION:-15}&charset=${POSTGRES_CHARSET:-utf8}
      # Run "composer require symfony/mercure-bundle" to install and configure the Mercure integration
      #      MERCURE_URL: ${CADDY_MERCURE_URL:-http://php/.well-known/mercure}
      #      MERCURE_PUBLIC_URL: https://${SERVER_NAME:-localhost}/.well-known/mercure
      #      MERCURE_JWT_SECRET: ${CADDY_MERCURE_JWT_SECRET:-!ChangeThisMercureHubJWTSecretKey!}
      # The two next lines can be removed after initial installation
    #      SYMFONY_VERSION: ${SYMFONY_VERSION:-}
    volumes:
      - caddy_data:/data
      - caddy_config:/config
    ports:
      - target: 8080
        published: ${HTTP_PORT:-8080}
        protocol: tcp
      - target: 80
        published: ${HTTP_PORT:-80}
        protocol: udp
    depends_on:
      - postgres

  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: q1w2e3r4
      POSTGRES_DB: app
    ports:
      - target: 5432
        published: 5432
        protocol: tcp
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d postgres"]
      interval: 5s
      timeout: 5s
      retries: 6
    volumes:
      - postgres-data:/var/lib/postgresql/data

  mailer:
    image: mailhog/mailhog:v1.0.0
    ports:
      - target: 8025
        published: 8025
        protocol: tcp
      - target: 1025
        published: 1025
        protocol: tcp

  # not necessary since we run Caddy and the Scheduler through Supervisord in Dockerfile
  # messenger:
  #   image: ${CONTAINER_PREFIX:-}-app-php
  #   command: ["bin/console", "messenger:consume", "-v", "scheduler_default"]
  #   restart: unless-stopped
  #   environment:
  #     STABILITY: ${STABILITY:-stable}
  #   depends_on:
  #     - php
  #     - postgres
  #     - memcached

volumes:
  postgres-data: {}
  caddy_data: {}
  caddy_config: {}
